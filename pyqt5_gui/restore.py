from paramiko import SSHClient
from scp import SCPClient
import zipfile
import os
import clamd







class Restore():

	def __init__ (self):
		self.files_to_restore = []
		

	def getFiles(self):
		ssh = SSHClient()
		ssh.load_system_host_keys()
		ssh.connect(hostname = 'raspberrypi.local', username='pi', password = 'raspberry')
		stdin, stdout, stderr = ssh.exec_command('ls -l --full-time --block-size=M Backups/')
		files = stdout.readlines()
		for file in files :
			self.files_to_restore.append(file.split(" "))
		self.files_to_restore.pop(0)
		ssh.close()
		return self.files_to_restore


	def restoreFiles(self, file_name):
		ssh = SSHClient()
		ssh.load_system_host_keys()
		ssh.connect(hostname = 'raspberrypi.local', username='pi', password = 'raspberry')
		scp = SCPClient(ssh.get_transport())
		#scp.put("/home/pi/Backups/"+file_name, "restaured"+file_name)
		scp.get("/home/pi/Backups/"+file_name)
		ssh.close()
		os.mkdir("restaured/"+file_name)
		with zipfile.ZipFile(file_name,"r") as zip_ref:
		    zip_ref.extractall("restaured/"+file_name)
		os.remove(file_name)
		print("FILES SENDED")



	def restoreScanner(self, file_name, ssh):
		ssh.exec_command("mkdir /tmp/" + file_name)
		



