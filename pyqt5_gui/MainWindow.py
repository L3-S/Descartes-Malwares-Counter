# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.12
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from host import Host
from backup import Backup
from restore import Restore
from restore_files_dialog import Ui_RestoreFilesDialog
from proxyWindow import Ui_ProxyWindow
from scannerWindow import Ui_MalwareScanWindow
from backup_thread import BackupThread
from connect_state_thread import ConnectStateThread
from usageWindow import Ui_usageDialog
import time
import shutil
from PyQt5.QtCore import QThread, pyqtSlot
from PyQt5.QtCore import QTranslator
import locale



class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(450, 250)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.analyzeButton = QtWidgets.QPushButton(self.centralwidget)
        self.analyzeButton.setObjectName("analyzeButton")
        self.verticalLayout.addWidget(self.analyzeButton)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.backupButton = QtWidgets.QPushButton(self.centralwidget)
        self.backupButton.setObjectName("backupButton")
        self.verticalLayout.addWidget(self.backupButton)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem2)
        self.restoreButton = QtWidgets.QPushButton(self.centralwidget)
        self.restoreButton.setObjectName("restoreButton")
        self.verticalLayout.addWidget(self.restoreButton)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem3)



        self.connectionLabel = QtWidgets.QLabel(self.centralwidget)
        self.pixmap = QtGui.QPixmap('img/connection_no_internet_no.png')
        self.connectionLabel.setPixmap(self.pixmap)
        self.verticalLayout.addWidget(self.connectionLabel)
     

        


        self.verticalLayout_2.addLayout(self.verticalLayout)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 355, 23))
        self.menuBar.setObjectName("menuBar")
        self.menuNetwork = QtWidgets.QMenu(self.menuBar)
        self.menuNetwork.setObjectName("menuNetwork")
        self.menuTools = QtWidgets.QMenu(self.menuBar)
        self.menuTools.setObjectName("menuTools")
        self.menuLang = QtWidgets.QMenu(self.menuBar)
        self.menuLang.setObjectName("menuLang")
        self.menuHelp_2 = QtWidgets.QMenu(self.menuBar)
        self.menuHelp_2.setObjectName("menuHelp_2")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setAutoFillBackground(False)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionEN = QtWidgets.QAction(MainWindow)
        self.actionEN.setObjectName("actionEN")
        self.actionFR = QtWidgets.QAction(MainWindow)
        self.actionFR.setObjectName("actionFR")
        self.actionConnection = QtWidgets.QAction(MainWindow)
        self.actionConnection.setObjectName("actionConnection")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAR = QtWidgets.QAction(MainWindow)
        self.actionAR.setObjectName("actionAR")
        self.actionIT = QtWidgets.QAction(MainWindow)
        self.actionIT.setObjectName("actionIT")
        self.actionDocs = QtWidgets.QAction(MainWindow)
        self.actionDocs.setObjectName("actionDocs")
        self.actionAbout_DRC = QtWidgets.QAction(MainWindow)
        self.actionAbout_DRC.setObjectName("actionAbout_DRC")
        self.actionProxy = QtWidgets.QAction(MainWindow)
        self.actionProxy.setObjectName("actionProxy")
        self.actionMalwareScan = QtWidgets.QAction(MainWindow)
        self.actionMalwareScan.setObjectName("actionMalwareScan")
        self.actionRPiDiagno = QtWidgets.QAction(MainWindow)
        self.actionRPiDiagno.setObjectName("actionRPiDiagno")
        self.actionLiveUsb = QtWidgets.QAction(MainWindow)
        self.actionLiveUsb.setObjectName("actionLiveUsb")
        self.menuNetwork.addAction(self.actionProxy)
        self.menuTools.addAction(self.actionMalwareScan)
        self.menuTools.addAction(self.actionLiveUsb)
        self.menuTools.addAction(self.actionRPiDiagno)
        self.menuLang.addAction(self.actionAR)
        self.menuLang.addAction(self.actionEN)
        self.menuLang.addAction(self.actionFR)
        self.menuLang.addAction(self.actionIT)
        self.menuHelp_2.addAction(self.actionDocs)
        self.menuHelp_2.addSeparator()
        self.menuHelp_2.addAction(self.actionAbout_DRC)
        self.menuBar.addAction(self.menuNetwork.menuAction())
        self.menuBar.addAction(self.menuTools.menuAction())
        self.menuBar.addAction(self.menuLang.menuAction())
        self.menuBar.addAction(self.menuHelp_2.menuAction())

        self.connect_thread = ConnectStateThread()
        self.connect_thread.connection_state.connect(self.getConnectState)
        self.connect_thread.start()


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Descartes Ransomewares Counter"))
        self.analyzeButton.setText(_translate("MainWindow", "Analyze"))
        self.backupButton.setText(_translate("MainWindow", "Backup"))
        self.restoreButton.setText(_translate("MainWindow", "Restore"))
        self.menuNetwork.setTitle(_translate("MainWindow", "Network"))
        self.actionProxy.setText(_translate("MainWindow", "Proxy"))

        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionMalwareScan.setText(_translate("MainWindow", "Scan shared folder"))
        self.actionLiveUsb.setText(_translate("MainWindow", "Fresh live USB"))
        self.actionRPiDiagno.setText(_translate("MainWindow", "RPi diagnostic"))

        self.menuLang.setTitle(_translate("MainWindow", "Language"))
        self.menuHelp_2.setTitle(_translate("MainWindow", "Help"))
        self.statusBar.setToolTip(_translate("MainWindow", "State : Unknown"))
        
        self.actionConnection.setText(_translate("MainWindow", "Connection"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionFR.setText(_translate("MainWindow", "FR"))
        self.actionAR.setText(_translate("MainWindow", "AR"))
        self.actionIT.setText(_translate("MainWindow", "IT"))
        self.actionEN.setText(_translate("MainWindow", "EN"))
        self.actionDocs.setText(_translate("MainWindow", "Docs"))
        self.actionAbout_DRC.setText(_translate("MainWindow", "About DRC"))



        self.backupButton.clicked.connect(self.backupClick)
        self.restoreButton.clicked.connect(self.restoreClick)
        self.actionProxy.triggered.connect(self.proxyClick)
        self.actionMalwareScan.triggered.connect(self.malwareScanClick)
        self.actionRPiDiagno.triggered.connect(self.diagnoClick)
        self.actionEN.triggered.connect(lambda arg="en": self.langClick("en"))
        self.actionFR.triggered.connect(lambda arg="en": self.langClick("fr"))
        self.actionAR.triggered.connect(lambda arg="en": self.langClick("ar"))
        self.actionIT.triggered.connect(lambda arg="en": self.langClick("it"))
        

    def backupClick(self):
        self.backup_thread = BackupThread()
        self.backup_thread.finished.connect(self.finishedBackup)
        self.backup_thread.start()
        self.backupButton.setEnabled(False)
        self.backupButton.setText('Backup process')

    def finishedBackup(self):
        self.backupButton.setEnabled(True)
        self.backupButton.setText('Backup')

    def getConnectState(self, value):
        if value == "LOCAL+INTERNET" :
            self.pixmap = QtGui.QPixmap('img/connection_yes_internet_yes.png')
            self.connectionLabel.setPixmap(self.pixmap)
            self.statusBar.showMessage("State : Internet + Raspberry Pi Network")
        elif value == "LOCAL" :
            self.pixmap = QtGui.QPixmap('img/connection_yes_internet_no.png')
            self.connectionLabel.setPixmap(self.pixmap)
            self.statusBar.showMessage("State : Only Raspberry Pi Network")
        elif value == "INTERNET" :
            self.pixmap = QtGui.QPixmap('img/connection_no_internet_yes.png')
            self.connectionLabel.setPixmap(self.pixmap)
            self.statusBar.showMessage("State : Only Internet")
        else :
            self.pixmap = QtGui.QPixmap('img/connection_no_internet_no.png')
            self.connectionLabel.setPixmap(self.pixmap) 
            self.statusBar.showMessage("State : No Internet + No Raspberry Pi Network")

    def restoreClick(self):
        Dialog = QtWidgets.QDialog()
        ui = Ui_RestoreFilesDialog()
        ui.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()

    def proxyClick(self):
        Dialog = QtWidgets.QDialog()
        ui = Ui_ProxyWindow()
        ui.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()


    def malwareScanClick(self) :
        Dialog = QtWidgets.QDialog()
        ui = Ui_MalwareScanWindow()
        ui.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()

    def diagnoClick(self):
        Dialog = QtWidgets.QDialog()
        ui = Ui_usageDialog()
        ui.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()


    def get_hd_infos(self):
        total_r, used_r, free_r = shutil.disk_usage("/")
        total_h, used_h, free_h = shutil.disk_usage("/home")
        total_t = (total_h + total_r) // (2**30)
        used_t  = (used_h  + used_r) // (2**30)
        free_t  = (free_h  + free_r) // (2**30)
        return (total_t, used_t, free_t)

    def langClick(self, lang):
        translator = QTranslator()
        new_lang       = "MainWindow_"+lang+".qm"
        translator.load(new_lang)
        app.installTranslator(translator)
        ui.retranslateUi(MainWindow)

        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    translator = QTranslator()
    local_lang = locale.getdefaultlocale()
    if 'fr' in local_lang[0] :
        translator.load("MainWindow_fr.qm")
    elif 'ar' in local_lang[0]:
        translator.load("MainWindow_ar.qm")
    elif 'it' in local_lang[0]:
        translator.load("MainWindow_it.qm")
    else :
        pass
    app.installTranslator(translator)
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
